@using RealtyHub.Core.Models

<MudDialog>
    <DialogContent>
        <ViewingForm 
            Id="Id"
            Customer="Customer" 
            Property="Property"
            LockCustomerSearch="LockCustomerSearch"
            LockPropertySearch="LockPropertySearch"
            RedirectToPageList="RedirectToPageList"
            OnSubmitButtonClicked="OnSubmitButtonClickedAsync" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CloseDialog" Color="Color.Primary">Fechar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public Imovel? Property { get; set; }

    [Parameter]
    public Cliente? Customer { get; set; }

    [Parameter]
    public long Id { get; set; }

    [Parameter]
    public bool LockCustomerSearch { get; set; }

    [Parameter]
    public bool LockPropertySearch { get; set; }

    [Parameter]
    public bool RedirectToPageList { get; set; }

    [Parameter]
    public EventCallback<Imovel> OnPropertySelected { get; set; }

    [Parameter]
    public EventCallback OnSubmitButtonClicked { get; set; }

    public async Task SelectProperty(Imovel imovel)
    {
        if (OnPropertySelected.HasDelegate)
            await OnPropertySelected.InvokeAsync(imovel);

        MudDialog.Close(DialogResult.Ok(imovel));
    }

    public async Task OnSubmitButtonClickedAsync()
    {
        if (OnSubmitButtonClicked.HasDelegate)
            await OnSubmitButtonClicked.InvokeAsync();

        CloseDialog();
    }

    void CloseDialog() => MudDialog.Close();
}