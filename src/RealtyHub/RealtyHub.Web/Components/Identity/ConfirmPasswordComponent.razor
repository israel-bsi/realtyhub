@using RealtyHub.Core.Models.Account
<MudTextField T="string"
              Label="Senha"
              InputType="InputType.Password"
              For="@(() => InputModel.Password)"
              @bind-Value="InputModel.Password"
              Class="mb-4"
              AdornmentIcon="@Icons.Material.Filled.Password"
              Adornment="Adornment.Start" />

<MudTextField T="string"
              Label="Confirmar Senha"
              InputType="InputType.Password"
              For="@(() => InputModel.ConfirmPassword)"
              @bind-Value="InputModel.ConfirmPassword"
              OnBlur="IsPasswordEqual"
              Error="@(!InputModel.IsEqual)"
              ErrorText="@InputModel.Message"
              Class="mb-4"
              AdornmentIcon="@Icons.Material.Filled.Password"
              Adornment="Adornment.Start" />

@code
{
    [Parameter, EditorRequired] 
    public PasswordResetModel InputModel { get; set; } = new();

    [CascadingParameter]
    public EditContext CurrentEditContext { get; set; } = null!;

    [Parameter]
    public EventCallback<PasswordResetModel> InputModelChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnParametersSetAsync();
        await base.OnInitializedAsync();
    }

    public void IsPasswordEqual()
    {
        if (InputModel.IsEqual) return;
        InputModelChanged.InvokeAsync(InputModel);
        StateHasChanged();
    }
}