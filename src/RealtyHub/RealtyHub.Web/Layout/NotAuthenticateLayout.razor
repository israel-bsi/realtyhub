@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage

<MudThemeProvider @ref="_mudThemeProvider"
                  @bind-IsDarkMode="IsDarkMode"
                  Theme="Configuration.Theme" />
<MudSnackbarProvider />
<MudDialogProvider />

<MudLayout>
    <CascadingValue Value="this">
        <MudAppBar>
            RealtyHub
            <MudSpacer />
            <MudSwitch Color="Color.Inherit"
                       Value="IsDarkMode"
                       ValueChanged="OnThemeToggled"
                       T="bool"
                       ThumbIcon="@Icons.TwoTone.DarkMode"
                       Class="ma-4"
                       Disabled="DisableMudSwitch" />
        </MudAppBar>
        <MudMainContent>
            <MudContainer Class="mt-4">
                @Body
            </MudContainer>
        </MudMainContent>
    </CascadingValue>
</MudLayout>

@code
{
    public bool SaveState { get; set; }
    public bool IsDarkMode { get; set; }
    public bool DisableMudSwitch { get; set; }
  
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedTheme = await LocalStorage.GetItemAsync<bool?>("themePreference");
            if (storedTheme.HasValue)
            {
                IsDarkMode = storedTheme.Value;
            }
            else
            {
                IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            }
            await LocalStorage.SetItemAsync<bool?>("themePreference", IsDarkMode);
            StateHasChanged();
        }
        SaveState = true;
    }

    private async Task OnThemeToggled(bool newValue)
    {
        IsDarkMode = newValue;
        if (!SaveState) return;
        await LocalStorage.SetItemAsync("themePreference", IsDarkMode);
        StateHasChanged();
    }

    public void UpdateStatusDark(bool isDarkMode, bool disableMudSwtich)
    {
        IsDarkMode = isDarkMode;
        SaveState = false;
        DisableMudSwitch = disableMudSwtich;
        StateHasChanged();
    }
}